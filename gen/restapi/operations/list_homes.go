// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListHomesHandlerFunc turns a function with the right signature into a list homes handler
type ListHomesHandlerFunc func(ListHomesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListHomesHandlerFunc) Handle(params ListHomesParams) middleware.Responder {
	return fn(params)
}

// ListHomesHandler interface for that can handle valid list homes params
type ListHomesHandler interface {
	Handle(ListHomesParams) middleware.Responder
}

// NewListHomes creates a new http.Handler for the list homes operation
func NewListHomes(ctx *middleware.Context, handler ListHomesHandler) *ListHomes {
	return &ListHomes{Context: ctx, Handler: handler}
}

/*
	ListHomes swagger:route GET /home listHomes

Return a list of homes
*/
type ListHomes struct {
	Context *middleware.Context
	Handler ListHomesHandler
}

func (o *ListHomes) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewListHomesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
