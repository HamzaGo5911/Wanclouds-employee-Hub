// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListOfficesHandlerFunc turns a function with the right signature into a list offices handler
type ListOfficesHandlerFunc func(ListOfficesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListOfficesHandlerFunc) Handle(params ListOfficesParams) middleware.Responder {
	return fn(params)
}

// ListOfficesHandler interface for that can handle valid list offices params
type ListOfficesHandler interface {
	Handle(ListOfficesParams) middleware.Responder
}

// NewListOffices creates a new http.Handler for the list offices operation
func NewListOffices(ctx *middleware.Context, handler ListOfficesHandler) *ListOffices {
	return &ListOffices{Context: ctx, Handler: handler}
}

/*
	ListOffices swagger:route GET /office listOffices

Return a list of offices
*/
type ListOffices struct {
	Context *middleware.Context
	Handler ListOfficesHandler
}

func (o *ListOffices) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewListOfficesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
