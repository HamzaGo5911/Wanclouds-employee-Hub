// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/HamzaGo5911/wanclouds-employee-hub/gen/models"
)

// AddOfficeReader is a Reader for the AddOffice structure.
type AddOfficeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddOfficeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddOfficeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddOfficeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAddOfficeConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddOfficeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /office] addOffice", response, response.Code())
	}
}

// NewAddOfficeCreated creates a AddOfficeCreated with default headers values
func NewAddOfficeCreated() *AddOfficeCreated {
	return &AddOfficeCreated{}
}

/*
AddOfficeCreated describes a response with status code 201, with default header values.

Office added
*/
type AddOfficeCreated struct {
	Payload *models.Office
}

// IsSuccess returns true when this add office created response has a 2xx status code
func (o *AddOfficeCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add office created response has a 3xx status code
func (o *AddOfficeCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add office created response has a 4xx status code
func (o *AddOfficeCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add office created response has a 5xx status code
func (o *AddOfficeCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add office created response a status code equal to that given
func (o *AddOfficeCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add office created response
func (o *AddOfficeCreated) Code() int {
	return 201
}

func (o *AddOfficeCreated) Error() string {
	return fmt.Sprintf("[POST /office][%d] addOfficeCreated  %+v", 201, o.Payload)
}

func (o *AddOfficeCreated) String() string {
	return fmt.Sprintf("[POST /office][%d] addOfficeCreated  %+v", 201, o.Payload)
}

func (o *AddOfficeCreated) GetPayload() *models.Office {
	return o.Payload
}

func (o *AddOfficeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Office)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddOfficeBadRequest creates a AddOfficeBadRequest with default headers values
func NewAddOfficeBadRequest() *AddOfficeBadRequest {
	return &AddOfficeBadRequest{}
}

/*
AddOfficeBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type AddOfficeBadRequest struct {
}

// IsSuccess returns true when this add office bad request response has a 2xx status code
func (o *AddOfficeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add office bad request response has a 3xx status code
func (o *AddOfficeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add office bad request response has a 4xx status code
func (o *AddOfficeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add office bad request response has a 5xx status code
func (o *AddOfficeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add office bad request response a status code equal to that given
func (o *AddOfficeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add office bad request response
func (o *AddOfficeBadRequest) Code() int {
	return 400
}

func (o *AddOfficeBadRequest) Error() string {
	return fmt.Sprintf("[POST /office][%d] addOfficeBadRequest ", 400)
}

func (o *AddOfficeBadRequest) String() string {
	return fmt.Sprintf("[POST /office][%d] addOfficeBadRequest ", 400)
}

func (o *AddOfficeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddOfficeConflict creates a AddOfficeConflict with default headers values
func NewAddOfficeConflict() *AddOfficeConflict {
	return &AddOfficeConflict{}
}

/*
AddOfficeConflict describes a response with status code 409, with default header values.

office already exists
*/
type AddOfficeConflict struct {
}

// IsSuccess returns true when this add office conflict response has a 2xx status code
func (o *AddOfficeConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add office conflict response has a 3xx status code
func (o *AddOfficeConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add office conflict response has a 4xx status code
func (o *AddOfficeConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this add office conflict response has a 5xx status code
func (o *AddOfficeConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this add office conflict response a status code equal to that given
func (o *AddOfficeConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the add office conflict response
func (o *AddOfficeConflict) Code() int {
	return 409
}

func (o *AddOfficeConflict) Error() string {
	return fmt.Sprintf("[POST /office][%d] addOfficeConflict ", 409)
}

func (o *AddOfficeConflict) String() string {
	return fmt.Sprintf("[POST /office][%d] addOfficeConflict ", 409)
}

func (o *AddOfficeConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddOfficeInternalServerError creates a AddOfficeInternalServerError with default headers values
func NewAddOfficeInternalServerError() *AddOfficeInternalServerError {
	return &AddOfficeInternalServerError{}
}

/*
AddOfficeInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type AddOfficeInternalServerError struct {
}

// IsSuccess returns true when this add office internal server error response has a 2xx status code
func (o *AddOfficeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add office internal server error response has a 3xx status code
func (o *AddOfficeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add office internal server error response has a 4xx status code
func (o *AddOfficeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add office internal server error response has a 5xx status code
func (o *AddOfficeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add office internal server error response a status code equal to that given
func (o *AddOfficeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add office internal server error response
func (o *AddOfficeInternalServerError) Code() int {
	return 500
}

func (o *AddOfficeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /office][%d] addOfficeInternalServerError ", 500)
}

func (o *AddOfficeInternalServerError) String() string {
	return fmt.Sprintf("[POST /office][%d] addOfficeInternalServerError ", 500)
}

func (o *AddOfficeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
