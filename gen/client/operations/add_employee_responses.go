// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/HamzaGo5911/wanclouds-employee-hub/gen/models"
)

// AddEmployeeReader is a Reader for the AddEmployee structure.
type AddEmployeeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddEmployeeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddEmployeeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddEmployeeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAddEmployeeConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddEmployeeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /employee] addEmployee", response, response.Code())
	}
}

// NewAddEmployeeCreated creates a AddEmployeeCreated with default headers values
func NewAddEmployeeCreated() *AddEmployeeCreated {
	return &AddEmployeeCreated{}
}

/*
AddEmployeeCreated describes a response with status code 201, with default header values.

Employee added
*/
type AddEmployeeCreated struct {
	Payload *models.Employee
}

// IsSuccess returns true when this add employee created response has a 2xx status code
func (o *AddEmployeeCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add employee created response has a 3xx status code
func (o *AddEmployeeCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add employee created response has a 4xx status code
func (o *AddEmployeeCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add employee created response has a 5xx status code
func (o *AddEmployeeCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add employee created response a status code equal to that given
func (o *AddEmployeeCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add employee created response
func (o *AddEmployeeCreated) Code() int {
	return 201
}

func (o *AddEmployeeCreated) Error() string {
	return fmt.Sprintf("[POST /employee][%d] addEmployeeCreated  %+v", 201, o.Payload)
}

func (o *AddEmployeeCreated) String() string {
	return fmt.Sprintf("[POST /employee][%d] addEmployeeCreated  %+v", 201, o.Payload)
}

func (o *AddEmployeeCreated) GetPayload() *models.Employee {
	return o.Payload
}

func (o *AddEmployeeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Employee)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddEmployeeBadRequest creates a AddEmployeeBadRequest with default headers values
func NewAddEmployeeBadRequest() *AddEmployeeBadRequest {
	return &AddEmployeeBadRequest{}
}

/*
AddEmployeeBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type AddEmployeeBadRequest struct {
}

// IsSuccess returns true when this add employee bad request response has a 2xx status code
func (o *AddEmployeeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add employee bad request response has a 3xx status code
func (o *AddEmployeeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add employee bad request response has a 4xx status code
func (o *AddEmployeeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add employee bad request response has a 5xx status code
func (o *AddEmployeeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add employee bad request response a status code equal to that given
func (o *AddEmployeeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add employee bad request response
func (o *AddEmployeeBadRequest) Code() int {
	return 400
}

func (o *AddEmployeeBadRequest) Error() string {
	return fmt.Sprintf("[POST /employee][%d] addEmployeeBadRequest ", 400)
}

func (o *AddEmployeeBadRequest) String() string {
	return fmt.Sprintf("[POST /employee][%d] addEmployeeBadRequest ", 400)
}

func (o *AddEmployeeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddEmployeeConflict creates a AddEmployeeConflict with default headers values
func NewAddEmployeeConflict() *AddEmployeeConflict {
	return &AddEmployeeConflict{}
}

/*
AddEmployeeConflict describes a response with status code 409, with default header values.

employee already exists
*/
type AddEmployeeConflict struct {
}

// IsSuccess returns true when this add employee conflict response has a 2xx status code
func (o *AddEmployeeConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add employee conflict response has a 3xx status code
func (o *AddEmployeeConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add employee conflict response has a 4xx status code
func (o *AddEmployeeConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this add employee conflict response has a 5xx status code
func (o *AddEmployeeConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this add employee conflict response a status code equal to that given
func (o *AddEmployeeConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the add employee conflict response
func (o *AddEmployeeConflict) Code() int {
	return 409
}

func (o *AddEmployeeConflict) Error() string {
	return fmt.Sprintf("[POST /employee][%d] addEmployeeConflict ", 409)
}

func (o *AddEmployeeConflict) String() string {
	return fmt.Sprintf("[POST /employee][%d] addEmployeeConflict ", 409)
}

func (o *AddEmployeeConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddEmployeeInternalServerError creates a AddEmployeeInternalServerError with default headers values
func NewAddEmployeeInternalServerError() *AddEmployeeInternalServerError {
	return &AddEmployeeInternalServerError{}
}

/*
AddEmployeeInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type AddEmployeeInternalServerError struct {
}

// IsSuccess returns true when this add employee internal server error response has a 2xx status code
func (o *AddEmployeeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add employee internal server error response has a 3xx status code
func (o *AddEmployeeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add employee internal server error response has a 4xx status code
func (o *AddEmployeeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add employee internal server error response has a 5xx status code
func (o *AddEmployeeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add employee internal server error response a status code equal to that given
func (o *AddEmployeeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add employee internal server error response
func (o *AddEmployeeInternalServerError) Code() int {
	return 500
}

func (o *AddEmployeeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /employee][%d] addEmployeeInternalServerError ", 500)
}

func (o *AddEmployeeInternalServerError) String() string {
	return fmt.Sprintf("[POST /employee][%d] addEmployeeInternalServerError ", 500)
}

func (o *AddEmployeeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
