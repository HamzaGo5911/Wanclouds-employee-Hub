// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/HamzaGo5911/wanclouds-employee-hub/gen/models"
)

// ListOfficesReader is a Reader for the ListOffices structure.
type ListOfficesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListOfficesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListOfficesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewListOfficesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListOfficesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListOfficesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListOfficesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /office] listOffices", response, response.Code())
	}
}

// NewListOfficesOK creates a ListOfficesOK with default headers values
func NewListOfficesOK() *ListOfficesOK {
	return &ListOfficesOK{}
}

/*
ListOfficesOK describes a response with status code 200, with default header values.

List of offices
*/
type ListOfficesOK struct {
	Payload []*models.Office
}

// IsSuccess returns true when this list offices o k response has a 2xx status code
func (o *ListOfficesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list offices o k response has a 3xx status code
func (o *ListOfficesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list offices o k response has a 4xx status code
func (o *ListOfficesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list offices o k response has a 5xx status code
func (o *ListOfficesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list offices o k response a status code equal to that given
func (o *ListOfficesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list offices o k response
func (o *ListOfficesOK) Code() int {
	return 200
}

func (o *ListOfficesOK) Error() string {
	return fmt.Sprintf("[GET /office][%d] listOfficesOK  %+v", 200, o.Payload)
}

func (o *ListOfficesOK) String() string {
	return fmt.Sprintf("[GET /office][%d] listOfficesOK  %+v", 200, o.Payload)
}

func (o *ListOfficesOK) GetPayload() []*models.Office {
	return o.Payload
}

func (o *ListOfficesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOfficesNoContent creates a ListOfficesNoContent with default headers values
func NewListOfficesNoContent() *ListOfficesNoContent {
	return &ListOfficesNoContent{}
}

/*
ListOfficesNoContent describes a response with status code 204, with default header values.

No office record found
*/
type ListOfficesNoContent struct {
}

// IsSuccess returns true when this list offices no content response has a 2xx status code
func (o *ListOfficesNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list offices no content response has a 3xx status code
func (o *ListOfficesNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list offices no content response has a 4xx status code
func (o *ListOfficesNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this list offices no content response has a 5xx status code
func (o *ListOfficesNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this list offices no content response a status code equal to that given
func (o *ListOfficesNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the list offices no content response
func (o *ListOfficesNoContent) Code() int {
	return 204
}

func (o *ListOfficesNoContent) Error() string {
	return fmt.Sprintf("[GET /office][%d] listOfficesNoContent ", 204)
}

func (o *ListOfficesNoContent) String() string {
	return fmt.Sprintf("[GET /office][%d] listOfficesNoContent ", 204)
}

func (o *ListOfficesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListOfficesBadRequest creates a ListOfficesBadRequest with default headers values
func NewListOfficesBadRequest() *ListOfficesBadRequest {
	return &ListOfficesBadRequest{}
}

/*
ListOfficesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ListOfficesBadRequest struct {
}

// IsSuccess returns true when this list offices bad request response has a 2xx status code
func (o *ListOfficesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list offices bad request response has a 3xx status code
func (o *ListOfficesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list offices bad request response has a 4xx status code
func (o *ListOfficesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list offices bad request response has a 5xx status code
func (o *ListOfficesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list offices bad request response a status code equal to that given
func (o *ListOfficesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list offices bad request response
func (o *ListOfficesBadRequest) Code() int {
	return 400
}

func (o *ListOfficesBadRequest) Error() string {
	return fmt.Sprintf("[GET /office][%d] listOfficesBadRequest ", 400)
}

func (o *ListOfficesBadRequest) String() string {
	return fmt.Sprintf("[GET /office][%d] listOfficesBadRequest ", 400)
}

func (o *ListOfficesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListOfficesNotFound creates a ListOfficesNotFound with default headers values
func NewListOfficesNotFound() *ListOfficesNotFound {
	return &ListOfficesNotFound{}
}

/*
ListOfficesNotFound describes a response with status code 404, with default header values.

Offices not found
*/
type ListOfficesNotFound struct {
}

// IsSuccess returns true when this list offices not found response has a 2xx status code
func (o *ListOfficesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list offices not found response has a 3xx status code
func (o *ListOfficesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list offices not found response has a 4xx status code
func (o *ListOfficesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list offices not found response has a 5xx status code
func (o *ListOfficesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list offices not found response a status code equal to that given
func (o *ListOfficesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list offices not found response
func (o *ListOfficesNotFound) Code() int {
	return 404
}

func (o *ListOfficesNotFound) Error() string {
	return fmt.Sprintf("[GET /office][%d] listOfficesNotFound ", 404)
}

func (o *ListOfficesNotFound) String() string {
	return fmt.Sprintf("[GET /office][%d] listOfficesNotFound ", 404)
}

func (o *ListOfficesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListOfficesInternalServerError creates a ListOfficesInternalServerError with default headers values
func NewListOfficesInternalServerError() *ListOfficesInternalServerError {
	return &ListOfficesInternalServerError{}
}

/*
ListOfficesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ListOfficesInternalServerError struct {
}

// IsSuccess returns true when this list offices internal server error response has a 2xx status code
func (o *ListOfficesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list offices internal server error response has a 3xx status code
func (o *ListOfficesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list offices internal server error response has a 4xx status code
func (o *ListOfficesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list offices internal server error response has a 5xx status code
func (o *ListOfficesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list offices internal server error response a status code equal to that given
func (o *ListOfficesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list offices internal server error response
func (o *ListOfficesInternalServerError) Code() int {
	return 500
}

func (o *ListOfficesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /office][%d] listOfficesInternalServerError ", 500)
}

func (o *ListOfficesInternalServerError) String() string {
	return fmt.Sprintf("[GET /office][%d] listOfficesInternalServerError ", 500)
}

func (o *ListOfficesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
