// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/HamzaGo5911/wanclouds-employee-hub/gen/models"
)

// UpdateOfficeReader is a Reader for the UpdateOffice structure.
type UpdateOfficeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateOfficeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateOfficeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUpdateOfficeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateOfficeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /office/{ID}] updateOffice", response, response.Code())
	}
}

// NewUpdateOfficeOK creates a UpdateOfficeOK with default headers values
func NewUpdateOfficeOK() *UpdateOfficeOK {
	return &UpdateOfficeOK{}
}

/*
UpdateOfficeOK describes a response with status code 200, with default header values.

Office updated
*/
type UpdateOfficeOK struct {
	Payload *models.Office
}

// IsSuccess returns true when this update office o k response has a 2xx status code
func (o *UpdateOfficeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update office o k response has a 3xx status code
func (o *UpdateOfficeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update office o k response has a 4xx status code
func (o *UpdateOfficeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update office o k response has a 5xx status code
func (o *UpdateOfficeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update office o k response a status code equal to that given
func (o *UpdateOfficeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update office o k response
func (o *UpdateOfficeOK) Code() int {
	return 200
}

func (o *UpdateOfficeOK) Error() string {
	return fmt.Sprintf("[PATCH /office/{ID}][%d] updateOfficeOK  %+v", 200, o.Payload)
}

func (o *UpdateOfficeOK) String() string {
	return fmt.Sprintf("[PATCH /office/{ID}][%d] updateOfficeOK  %+v", 200, o.Payload)
}

func (o *UpdateOfficeOK) GetPayload() *models.Office {
	return o.Payload
}

func (o *UpdateOfficeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Office)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOfficeNotFound creates a UpdateOfficeNotFound with default headers values
func NewUpdateOfficeNotFound() *UpdateOfficeNotFound {
	return &UpdateOfficeNotFound{}
}

/*
UpdateOfficeNotFound describes a response with status code 404, with default header values.

Office not found
*/
type UpdateOfficeNotFound struct {
}

// IsSuccess returns true when this update office not found response has a 2xx status code
func (o *UpdateOfficeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update office not found response has a 3xx status code
func (o *UpdateOfficeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update office not found response has a 4xx status code
func (o *UpdateOfficeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update office not found response has a 5xx status code
func (o *UpdateOfficeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update office not found response a status code equal to that given
func (o *UpdateOfficeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update office not found response
func (o *UpdateOfficeNotFound) Code() int {
	return 404
}

func (o *UpdateOfficeNotFound) Error() string {
	return fmt.Sprintf("[PATCH /office/{ID}][%d] updateOfficeNotFound ", 404)
}

func (o *UpdateOfficeNotFound) String() string {
	return fmt.Sprintf("[PATCH /office/{ID}][%d] updateOfficeNotFound ", 404)
}

func (o *UpdateOfficeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOfficeInternalServerError creates a UpdateOfficeInternalServerError with default headers values
func NewUpdateOfficeInternalServerError() *UpdateOfficeInternalServerError {
	return &UpdateOfficeInternalServerError{}
}

/*
UpdateOfficeInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateOfficeInternalServerError struct {
}

// IsSuccess returns true when this update office internal server error response has a 2xx status code
func (o *UpdateOfficeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update office internal server error response has a 3xx status code
func (o *UpdateOfficeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update office internal server error response has a 4xx status code
func (o *UpdateOfficeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update office internal server error response has a 5xx status code
func (o *UpdateOfficeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update office internal server error response a status code equal to that given
func (o *UpdateOfficeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update office internal server error response
func (o *UpdateOfficeInternalServerError) Code() int {
	return 500
}

func (o *UpdateOfficeInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /office/{ID}][%d] updateOfficeInternalServerError ", 500)
}

func (o *UpdateOfficeInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /office/{ID}][%d] updateOfficeInternalServerError ", 500)
}

func (o *UpdateOfficeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
