// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/HamzaGo5911/wanclouds-employee-hub/gen/models"
)

// UpdateEmployeeReader is a Reader for the UpdateEmployee structure.
type UpdateEmployeeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateEmployeeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateEmployeeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUpdateEmployeeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateEmployeeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /employee/{ID}] updateEmployee", response, response.Code())
	}
}

// NewUpdateEmployeeOK creates a UpdateEmployeeOK with default headers values
func NewUpdateEmployeeOK() *UpdateEmployeeOK {
	return &UpdateEmployeeOK{}
}

/*
UpdateEmployeeOK describes a response with status code 200, with default header values.

Employee updated
*/
type UpdateEmployeeOK struct {
	Payload *models.Employee
}

// IsSuccess returns true when this update employee o k response has a 2xx status code
func (o *UpdateEmployeeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update employee o k response has a 3xx status code
func (o *UpdateEmployeeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update employee o k response has a 4xx status code
func (o *UpdateEmployeeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update employee o k response has a 5xx status code
func (o *UpdateEmployeeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update employee o k response a status code equal to that given
func (o *UpdateEmployeeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update employee o k response
func (o *UpdateEmployeeOK) Code() int {
	return 200
}

func (o *UpdateEmployeeOK) Error() string {
	return fmt.Sprintf("[PATCH /employee/{ID}][%d] updateEmployeeOK  %+v", 200, o.Payload)
}

func (o *UpdateEmployeeOK) String() string {
	return fmt.Sprintf("[PATCH /employee/{ID}][%d] updateEmployeeOK  %+v", 200, o.Payload)
}

func (o *UpdateEmployeeOK) GetPayload() *models.Employee {
	return o.Payload
}

func (o *UpdateEmployeeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Employee)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEmployeeNotFound creates a UpdateEmployeeNotFound with default headers values
func NewUpdateEmployeeNotFound() *UpdateEmployeeNotFound {
	return &UpdateEmployeeNotFound{}
}

/*
UpdateEmployeeNotFound describes a response with status code 404, with default header values.

Employee not found
*/
type UpdateEmployeeNotFound struct {
}

// IsSuccess returns true when this update employee not found response has a 2xx status code
func (o *UpdateEmployeeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update employee not found response has a 3xx status code
func (o *UpdateEmployeeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update employee not found response has a 4xx status code
func (o *UpdateEmployeeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update employee not found response has a 5xx status code
func (o *UpdateEmployeeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update employee not found response a status code equal to that given
func (o *UpdateEmployeeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update employee not found response
func (o *UpdateEmployeeNotFound) Code() int {
	return 404
}

func (o *UpdateEmployeeNotFound) Error() string {
	return fmt.Sprintf("[PATCH /employee/{ID}][%d] updateEmployeeNotFound ", 404)
}

func (o *UpdateEmployeeNotFound) String() string {
	return fmt.Sprintf("[PATCH /employee/{ID}][%d] updateEmployeeNotFound ", 404)
}

func (o *UpdateEmployeeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEmployeeInternalServerError creates a UpdateEmployeeInternalServerError with default headers values
func NewUpdateEmployeeInternalServerError() *UpdateEmployeeInternalServerError {
	return &UpdateEmployeeInternalServerError{}
}

/*
UpdateEmployeeInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateEmployeeInternalServerError struct {
}

// IsSuccess returns true when this update employee internal server error response has a 2xx status code
func (o *UpdateEmployeeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update employee internal server error response has a 3xx status code
func (o *UpdateEmployeeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update employee internal server error response has a 4xx status code
func (o *UpdateEmployeeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update employee internal server error response has a 5xx status code
func (o *UpdateEmployeeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update employee internal server error response a status code equal to that given
func (o *UpdateEmployeeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update employee internal server error response
func (o *UpdateEmployeeInternalServerError) Code() int {
	return 500
}

func (o *UpdateEmployeeInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /employee/{ID}][%d] updateEmployeeInternalServerError ", 500)
}

func (o *UpdateEmployeeInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /employee/{ID}][%d] updateEmployeeInternalServerError ", 500)
}

func (o *UpdateEmployeeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
